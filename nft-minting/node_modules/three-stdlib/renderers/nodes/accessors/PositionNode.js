"use strict";
var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};
const Node = require("../core/Node.js");
const AttributeNode = require("../core/AttributeNode.js");
const _PositionNode = class extends Node {
  constructor(scope = _PositionNode.POSITION) {
    super("vec3");
    this.scope = scope;
  }
  generate(builder, output) {
    const type = this.getType(builder);
    const nodeData = builder.getDataFromNode(this, builder.shaderStage);
    let positionNode = nodeData.positionNode;
    if (positionNode === void 0) {
      positionNode = new AttributeNode("position", "vec3");
      nodeData.positionNode = positionNode;
    }
    const positionSnipped = positionNode.build(builder, type);
    return builder.format(positionSnipped, type, output);
  }
};
let PositionNode = _PositionNode;
__publicField(PositionNode, "LOCAL", "local");
module.exports = PositionNode;
