"use strict";
Object.defineProperties(exports, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } });
const THREE = require("three");
class WebGPUUniform {
  constructor(name, value = null) {
    this.name = name;
    this.value = value;
    this.boundary = 0;
    this.itemSize = 0;
    this.offset = 0;
  }
  setValue(value) {
    this.value = value;
  }
  getValue() {
    return this.value;
  }
}
class FloatUniform extends WebGPUUniform {
  constructor(name, value = 0) {
    super(name, value);
    this.boundary = 4;
    this.itemSize = 1;
    Object.defineProperty(this, "isFloatUniform", { value: true });
  }
}
class Vector2Uniform extends WebGPUUniform {
  constructor(name, value = new THREE.Vector2()) {
    super(name, value);
    this.boundary = 8;
    this.itemSize = 2;
    Object.defineProperty(this, "isVector2Uniform", { value: true });
  }
}
class Vector3Uniform extends WebGPUUniform {
  constructor(name, value = new THREE.Vector3()) {
    super(name, value);
    this.boundary = 16;
    this.itemSize = 3;
    Object.defineProperty(this, "isVector3Uniform", { value: true });
  }
}
class Vector4Uniform extends WebGPUUniform {
  constructor(name, value = new THREE.Vector4()) {
    super(name, value);
    this.boundary = 16;
    this.itemSize = 4;
    Object.defineProperty(this, "isVector4Uniform", { value: true });
  }
}
class ColorUniform extends WebGPUUniform {
  constructor(name, value = new THREE.Color()) {
    super(name, value);
    this.boundary = 16;
    this.itemSize = 3;
    Object.defineProperty(this, "isColorUniform", { value: true });
  }
}
class Matrix3Uniform extends WebGPUUniform {
  constructor(name, value = new THREE.Matrix3()) {
    super(name, value);
    this.boundary = 48;
    this.itemSize = 12;
    Object.defineProperty(this, "isMatrix3Uniform", { value: true });
  }
}
class Matrix4Uniform extends WebGPUUniform {
  constructor(name, value = new THREE.Matrix4()) {
    super(name, value);
    this.boundary = 64;
    this.itemSize = 16;
    Object.defineProperty(this, "isMatrix4Uniform", { value: true });
  }
}
exports.ColorUniform = ColorUniform;
exports.FloatUniform = FloatUniform;
exports.Matrix3Uniform = Matrix3Uniform;
exports.Matrix4Uniform = Matrix4Uniform;
exports.Vector2Uniform = Vector2Uniform;
exports.Vector3Uniform = Vector3Uniform;
exports.Vector4Uniform = Vector4Uniform;
