"use strict";
Object.defineProperties(exports, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } });
const WebGPUUniform = require("../WebGPUUniform.js");
class FloatNodeUniform extends WebGPUUniform.FloatUniform {
  constructor(nodeUniform) {
    super(nodeUniform.name, nodeUniform.value);
    this.nodeUniform = nodeUniform;
  }
  getValue() {
    return this.nodeUniform.value;
  }
}
class Vector2NodeUniform extends WebGPUUniform.Vector2Uniform {
  constructor(nodeUniform) {
    super(nodeUniform.name, nodeUniform.value);
    this.nodeUniform = nodeUniform;
  }
  getValue() {
    return this.nodeUniform.value;
  }
}
class Vector3NodeUniform extends WebGPUUniform.Vector3Uniform {
  constructor(nodeUniform) {
    super(nodeUniform.name, nodeUniform.value);
    this.nodeUniform = nodeUniform;
  }
  getValue() {
    return this.nodeUniform.value;
  }
}
class Vector4NodeUniform extends WebGPUUniform.Vector4Uniform {
  constructor(nodeUniform) {
    super(nodeUniform.name, nodeUniform.value);
    this.nodeUniform = nodeUniform;
  }
  getValue() {
    return this.nodeUniform.value;
  }
}
class ColorNodeUniform extends WebGPUUniform.ColorUniform {
  constructor(nodeUniform) {
    super(nodeUniform.name, nodeUniform.value);
    this.nodeUniform = nodeUniform;
  }
  getValue() {
    return this.nodeUniform.value;
  }
}
class Matrix3NodeUniform extends WebGPUUniform.Matrix3Uniform {
  constructor(nodeUniform) {
    super(nodeUniform.name, nodeUniform.value);
    this.nodeUniform = nodeUniform;
  }
  getValue() {
    return this.nodeUniform.value;
  }
}
class Matrix4NodeUniform extends WebGPUUniform.Matrix4Uniform {
  constructor(nodeUniform) {
    super(nodeUniform.name, nodeUniform.value);
    this.nodeUniform = nodeUniform;
  }
  getValue() {
    return this.nodeUniform.value;
  }
}
exports.ColorNodeUniform = ColorNodeUniform;
exports.FloatNodeUniform = FloatNodeUniform;
exports.Matrix3NodeUniform = Matrix3NodeUniform;
exports.Matrix4NodeUniform = Matrix4NodeUniform;
exports.Vector2NodeUniform = Vector2NodeUniform;
exports.Vector3NodeUniform = Vector3NodeUniform;
exports.Vector4NodeUniform = Vector4NodeUniform;
