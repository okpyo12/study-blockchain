"use strict";
Object.defineProperties(exports, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } });
const WebGPUBinding = require("./WebGPUBinding.js");
const constants = require("./constants.js");
class WebGPUSampledTexture extends WebGPUBinding {
  constructor(name, texture) {
    super(name);
    this.texture = texture;
    this.dimension = constants.GPUTextureViewDimension.TwoD;
    this.type = constants.GPUBindingType.SampledTexture;
    this.visibility = GPUShaderStage.FRAGMENT;
    this.textureGPU = null;
    Object.defineProperty(this, "isSampledTexture", { value: true });
  }
}
class WebGPUSampledArrayTexture extends WebGPUSampledTexture {
  constructor(name) {
    super(name);
    this.dimension = constants.GPUTextureViewDimension.TwoDArray;
    Object.defineProperty(this, "isSampledArrayTexture", { value: true });
  }
}
class WebGPUSampled3DTexture extends WebGPUSampledTexture {
  constructor(name) {
    super(name);
    this.dimension = constants.GPUTextureViewDimension.ThreeD;
    Object.defineProperty(this, "isSampled3DTexture", { value: true });
  }
}
class WebGPUSampledCubeTexture extends WebGPUSampledTexture {
  constructor(name) {
    super(name);
    this.dimension = constants.GPUTextureViewDimension.Cube;
    Object.defineProperty(this, "isSampledCubeTexture", { value: true });
  }
}
exports.WebGPUSampled3DTexture = WebGPUSampled3DTexture;
exports.WebGPUSampledArrayTexture = WebGPUSampledArrayTexture;
exports.WebGPUSampledCubeTexture = WebGPUSampledCubeTexture;
exports.WebGPUSampledTexture = WebGPUSampledTexture;
