"use strict";
const Node = require("../core/Node.js");
const ShaderNode = require("../ShaderNode.js");
const constants = require("../core/constants.js");
const Skinning = new ShaderNode.ShaderNode((inputs, builder) => {
  const { index, weight, bindMatrix, bindMatrixInverse, boneMatrices } = inputs;
  const boneMatX = ShaderNode.element(boneMatrices, index.x);
  const boneMatY = ShaderNode.element(boneMatrices, index.y);
  const boneMatZ = ShaderNode.element(boneMatrices, index.z);
  const boneMatW = ShaderNode.element(boneMatrices, index.w);
  const skinVertex = ShaderNode.mul(bindMatrix, ShaderNode.positionLocal);
  const skinned = ShaderNode.add(
    ShaderNode.mul(ShaderNode.mul(boneMatX, skinVertex), weight.x),
    ShaderNode.mul(ShaderNode.mul(boneMatY, skinVertex), weight.y),
    ShaderNode.mul(ShaderNode.mul(boneMatZ, skinVertex), weight.z),
    ShaderNode.mul(ShaderNode.mul(boneMatW, skinVertex), weight.w)
  );
  const skinPosition = ShaderNode.mul(bindMatrixInverse, skinned).xyz;
  let skinMatrix = ShaderNode.add(
    ShaderNode.mul(weight.x, boneMatX),
    ShaderNode.mul(weight.y, boneMatY),
    ShaderNode.mul(weight.z, boneMatZ),
    ShaderNode.mul(weight.w, boneMatW)
  );
  skinMatrix = ShaderNode.mul(ShaderNode.mul(bindMatrixInverse, skinMatrix), bindMatrix);
  const skinNormal = ShaderNode.transformDirection(skinMatrix, ShaderNode.normalLocal).xyz;
  ShaderNode.assign(ShaderNode.positionLocal, skinPosition).build(builder);
  ShaderNode.assign(ShaderNode.normalLocal, skinNormal).build(builder);
});
class SkinningNode extends Node {
  constructor(skinnedMesh) {
    super("void");
    this.skinnedMesh = skinnedMesh;
    this.updateType = constants.NodeUpdateType.Object;
    this.skinIndexNode = ShaderNode.attribute("skinIndex", "uvec4");
    this.skinWeightNode = ShaderNode.attribute("skinWeight", "vec4");
    this.bindMatrixNode = ShaderNode.uniform(ShaderNode.mat4(skinnedMesh.bindMatrix));
    this.bindMatrixInverseNode = ShaderNode.uniform(ShaderNode.mat4(skinnedMesh.bindMatrixInverse));
    this.boneMatricesNode = ShaderNode.buffer(skinnedMesh.skeleton.boneMatrices, "mat4", skinnedMesh.skeleton.bones.length);
  }
  generate(builder) {
    Skinning(
      {
        index: this.skinIndexNode,
        weight: this.skinWeightNode,
        bindMatrix: this.bindMatrixNode,
        bindMatrixInverse: this.bindMatrixInverseNode,
        boneMatrices: this.boneMatricesNode
      },
      builder
    );
  }
  update() {
    this.skinnedMesh.skeleton.update();
  }
}
module.exports = SkinningNode;
