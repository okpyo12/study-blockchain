"use strict";
const ContextNode = require("../core/ContextNode.js");
const VarNode = require("../core/VarNode.js");
const UniformNode = require("../core/UniformNode.js");
const OperatorNode = require("../math/OperatorNode.js");
const BSDFs = require("../functions/BSDFs.js");
const THREE = require("three");
class LightContextNode extends ContextNode {
  constructor(node) {
    super(node);
  }
  getNodeType() {
    return "vec3";
  }
  generate(builder) {
    const material = builder.material;
    let lightingModel = null;
    if (material.isMeshStandardMaterial === true) {
      lightingModel = BSDFs.PhysicalLightingModel;
    }
    const directDiffuse = new VarNode(new UniformNode(new THREE.Vector3()), "DirectDiffuse", "vec3");
    const directSpecular = new VarNode(new UniformNode(new THREE.Vector3()), "DirectSpecular", "vec3");
    this.context.directDiffuse = directDiffuse;
    this.context.directSpecular = directSpecular;
    if (lightingModel !== null) {
      this.context.lightingModel = lightingModel;
    }
    const type = this.getNodeType(builder);
    super.generate(builder, type);
    const totalLight = new OperatorNode("+", directDiffuse, directSpecular);
    return totalLight.build(builder, type);
  }
}
module.exports = LightContextNode;
